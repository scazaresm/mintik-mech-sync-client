<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TabIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="TabIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA2
        CQAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEFYAAjMBNAFTATEBNgGMAfcBIQEpAZMB+wJIAU8BjwMJAQwUAAIzATQBUwEu
        ATMBhwH3ASYBLgGOAfsCSAFPAY8DCQEMwAADIQEvATkBQAGPAfcBUAFYAdQB/wE3ATwB0wH/ASABKgGn
        Af8CSAFPAY8QAAMhAS8BLgEzAYgB9wE2ATwByAH/ATcBPQHYAf8BKQExAZwB/wJIAU8Bj5gAAxoBJAMg
        AS0gAAEvATMBdwH3AVwBYwHTAf8BYwFkAeAB/wFUAVUB4AH/ATABNgHUAf8BIgEsAZ0B+wJIAU8BjwMJ
        AQwEAAIzATQBUwEsATIBigH3ATEBOAHIAf8BOAE9AekB/wE4AT0B6QH/ATcBPQHYAf8BJgEuAY4B+5QA
        AxkBIgElAWEBLQH8AUgBfQFdAdwEAhwAATIBNgFyAe8BXQFkAc4B/wFrAWoB4AH/AmMB4QH/AUwBTQHf
        Af8BLwE1AdQB/wEfASkBpwH/AkgBTwGPAyEBLwErATIBigH3ATABOAHOAf8BOAE9AekB/wE4AT0B6QH/
        ATgBPQHpAf8BNAE7AckB/wEuATMBhwH3kAADFgEdAUsBZgFTAb4BGQHTAV0B/wEXAcoBVgH/AUQBdwFV
        AdoDJwE6GAADEgEYAUwBUAFqAcMBXAFjAc4B/wFnAWgB3wH/AmIB4QH/AUQBRQHeAf8BLwE1AdQB/wEh
        ASsBnQH7ASoBMQGLAfcBLQE1AcwB/wE4AT0B6QH/ATgBPQHpAf8BOAE9AekB/wEwATcByQH/AS0BMwGI
        AfcCMwE0AVOMAAMUARsBJAFqATEB+QEWAbcBTQH/AQ8BwAFKAf8BDwHAAUoB/wEOAbkBRgH/AUYBcgFS
        AdQcAAMSARgBMQE2AXEB7wFUAVsBygH/AWkBaAHfAf8CXAHgAf8BNwE4AdwB/wEuATQB1AH/ASoBMwHR
        Af8BOAE8AeYB/wE4ATwB6AH/ATgBPQHoAf8BLgE3Ac0B/wEsATIBigH3AyEBL4wAAxIBFwFQAWMBVAG3
        AUEBtAFiAf8BPAG8AWAB/wE8AboBYgH/ATcBsQFbAf8BOAG6AV4B/wE4AawBWQH/AVYBcgFbAdIDJAE1
        GAADEgEYAUoBTAFqAcMBWQFgAc4B/wFkAWUB3wH/AlcB3wH/ATkBOgHcAf8BOAE5Ad8B/wE4AToB4gH/
        ATcBOwHlAf8BKQEzAckB/wErATIBigH3AjMBNAFTjAADEAEVASsBbQEvAfIBUQGvAWQB/wFVAbkBagH/
        AVQBuAFrAf8BPwFqAUAB6gFRAV4BVAGyAVgBvwFvAf8BVQG4AWoB/wFUAbIBZgH/AVgBbwFbAcscAAMS
        ARgBMQE2AXEB7wFYAV8BzgH/AWcBZgHfAf8CSwHdAf8BNwE4AdwB/wE3ATkB3wH/ASUBMAHNAf8BKAEx
        AYsB9wMhAS+QAAMjATIBSwGFAVIB7gFmAbcBcAH/AWcBuwF0Af8BVAFiAVUBsQMNAREDFgEdAVEBXAFS
        AacBXgGqAWcB+wFqAboBdAH/AWYBsAFuAf8BVwFuAVcByQEhASIBIQEwFAACMwE0AVMBPwFJAZQB9wFd
        AWYB1gH/AWoBawHeAf8CYgHeAf8CQAHaAf8BNwE4AdsB/wEtATQB1QH/ASEBKgGfAfsCSAFPAY8DCQEM
        kAADDwEUAV0BkgFfAe8BOwGEATsB8wMQARUMAAFSAV4BUwGqAYEBxgGGAf8BfwHBAYMB/wF/Ab0BgQH/
        AVUBbAFVAcQQAAMhAS8BRgFNAZcB9wFjAW8B4QH/AWcBdQHfAf8BaAFwAd8B/wFpAWoB3gH/AmAB3gH/
        AjsB2QH/ATcBOAHcAf8BLQEzAdYB/wEcAScBqwH/AkgBTwGPlAABJQEmASUBNwMSARcQAAMZASIBVAFh
        AVQBsAF+AcEBfgH8AZYB0wGWAf8BewG9AXsB/gFPAVkBTwGmBAEEAAEzAjQBUwFOAVEBmwH3AWsBeAHd
        Af8BXgF2Ad8B/wFjAXcB3wH/AWcBdQHgAf8BXgFnAdgB/wFSAVoBzgH/AU4BUAHbAf8CNwHYAf8BNwE4
        AdwB/wEtATMB1gH/ASEBKQGgAfsCSAFPAY8DCQEMrAABVgFlAVYBswGtAewBrQH/AWMBlwFjAekDCQEL
        BAADIQEvAVEBVQGdAfcBgAGLAekB/wFwAYQB4gH/AWYBfAHgAf8BZQF7AeAB/wFtAXkB5AH/AUYBTQGW
        AfcBMQE2AXEB7wFQAVkBzgH/AkMB2AH/AjcB2AH/ATcBOAHcAf8BLAEzAdcB/wEbAScBrAH/AkgBTwGP
        rAADGwEmAVkBYQFZAaUBMAExATABSwgAATUBOwF/AfcBiQGTAeQB/wGAAZIB5gH/AXcBiwHjAf8BbgGD
        AeIB/wFsAXkB3QH/AUsBUAGaAfcCMwE0AVMDEgEYAUwBUAFqAcMBTQFWAc4B/wE7AT0B1wH/AjcB2AH/
        ATcBOAHcAf8BKwEyAdcB/wEgASYBlwH7wAABNAE6AXMB7wGKAZIB3wH/AYgBmQHnAf8BfwGRAeUB/wF9
        AYgB6QH/AU0BUQGaAfcDIQEvCAADEgEYATEBNgFxAe8BQAFKAcwB/wE3ATUB1QH/AjYB2AH/AR8BKwHS
        Af8BJgEvAY0B98AAAxIBGAFTAVYBbQHDAYkBkgHfAf8BhQGPAeIB/wFPAVQBnQH3AjMBNAFTEAADEgEY
        AUoBTAFqAcMBLgE4AcYB/wEgASoBywH/ASUBLwGNAfcCMwE0AVPEAAMSARgBNAE6AXMB7wEzATgBewH3
        AyEBLxgAAxIBGAEvATQBcAHvASMBLQFyAfcDIQEvhAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEA
        AQEFAAGAFwAD/wEAAv8BgwHgBAAC/wEDAcAEAAH8Af8BAAGABAAB+AF/BgAB8AE/BgAB4AE/AYABAQQA
        AcABDwHAAQMEAAGAAQ8B4AEHBAABgAEDAeABAwQAAcMBgwHAAQMEAAHnAoAFAAH/AeEGAAH/AeMGAAL/
        AQEBgAQAAv8BAwHABAAC/wGHAeEEAAs=
</value>
  </data>
</root>